{"version":3,"sources":["Pages/CreateTable.js","Pages/InputTable.js","Pages/Table.js","Pages/Steps.js","ZT.js","App.js","index.js"],"names":["CreateTable","handleSubmit","useState","row","col","size","setSize","handleChange","e","target","id","value","handleFocus","handleBlur","className","htmlFor","type","onKeyPress","onFocus","onBlur","onChange","onClick","to","InputTable","table","handleSendData","getResolution","handleStart","tempTable","handleFillCell","i","getAttribute","j","tab","map","tableRow","length","cell","push","style","opacity","cursor","backgroundColor","key","Table","title","titleStyle","styles","x","y","tabViev","styless","fontSize","styleCell","color","undefined","Steps","zt","start","Tabela","steps","setSteps","Optymalne","step","kolejnyKrok","caseIndex","data","desc","nieBazyTable","getRozwiazanie","ee","cykl","T","kosztOptymalny","tab2","ZT","setTable","Podaz","Popyt","sumInRow","sumInCol","forEach","diff","Math","abs","index","splice","temptable","Koszty","katPolnocnoZachodni","wynik","wiersz","podaz","elem","popyt","linia","element","wartosc","Rozwiazanie","bazowePotencjaly","Y","X","flag","hasEmpty","nieBazy","nieBazowePotencjaly","return","potencjaly","czyOptymalne","jestDodatnie","najDodatnia","newMax","maxVal","max","minKoszt","koszt","Cykl","cyklRoz","path","hasInRow","hasInCol","actual","depth","dir","prev","elementMinimalnyCyklu","min","Infinity","moveTValue","getNieBazowe","getBazowe","next","t","this","App","resolution","setResolution","cost","setCost","tablica","setTablica","basename","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9932275c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateTable = ({ handleSubmit }) => {\r\n  const [size, setSize] = useState({ row: 4, col: 4 });\r\n\r\n  const handleChange = e => {\r\n    if (e.target.id === \"row\")\r\n      setSize({\r\n        row:\r\n          e.target.value < 10 && e.target.value > 1 ? e.target.value : size.row,\r\n\r\n        col: size.col\r\n      });\r\n    else if (e.target.id === \"col\")\r\n      setSize({\r\n        row: size.row,\r\n        col:\r\n          e.target.value < 10 && e.target.value > 1 ? e.target.value : size.col\r\n      });\r\n  };\r\n\r\n  const sendData = () => {\r\n    handleSubmit(size);\r\n  };\r\n  const handleFocus = e => {\r\n    e.target.value = \"\";\r\n  };\r\n\r\n  const handleBlur = e => {\r\n    if (e.target.id === \"row\") e.target.value = size.row;\r\n    else if (e.target.id === \"col\") e.target.value = size.col;\r\n  };\r\n  return (\r\n    <div className=\"CreateWrapper\">\r\n      <label htmlFor=\"row\">Ilość wierszy </label>\r\n      <input\r\n        type=\"number\"\r\n        onKeyPress={e => (e.target.value = \"\")}\r\n        onFocus={handleFocus}\r\n        onBlur={handleBlur}\r\n        value={size.row}\r\n        onChange={handleChange}\r\n        id=\"row\"\r\n      />\r\n      <label htmlFor=\"col\">Ilość kolumn </label>\r\n      <input\r\n        type=\"number\"\r\n        onKeyPress={e => (e.target.value = \"\")}\r\n        onFocus={handleFocus}\r\n        onBlur={handleBlur}\r\n        value={size.col}\r\n        onChange={handleChange}\r\n        id=\"col\"\r\n      />\r\n      <Link onClick={sendData} to=\"/inputTable\">\r\n        STWÓRZ TABELE\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateTable;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst InputTable = ({ table, handleSendData, getResolution, handleStart }) => {\r\n  let tempTable = table;\r\n\r\n  const handleFillCell = e => {\r\n    let i = e.target.getAttribute(\"row\");\r\n    let j = e.target.getAttribute(\"col\");\r\n    let tab = tempTable.map(e => e);\r\n    if (+e.target.value >= 0) tab[i][j] = +e.target.value;\r\n    tempTable = tab;\r\n    handleSendData(tempTable);\r\n  };\r\n\r\n  let tableRow = [];\r\n  for (let i = 0; i < table.length; i++) {\r\n    let cell = [];\r\n    for (let j = 0; j < table[i].length; j++) {\r\n      cell.push(\r\n        <input\r\n          onFocus={e => (e.target.value = \"\")}\r\n          onBlur={e => {\r\n            let i = e.target.getAttribute(\"row\");\r\n            let j = e.target.getAttribute(\"col\");\r\n\r\n            e.target.value = table[i][j];\r\n          }}\r\n          style={\r\n            i === table.length - 1 && j === table[i].length - 1\r\n              ? { opacity: 0, cursor: \"default\" }\r\n              : i === table.length - 1 || j === table[i].length - 1\r\n              ? { backgroundColor: \"#35ADC0\" }\r\n              : {}\r\n          }\r\n          type=\"number\"\r\n          key={i + \"\" + j}\r\n          row={i}\r\n          col={j}\r\n          onChange={handleFillCell}\r\n          value={table[i][j]}\r\n        ></input>\r\n      );\r\n    }\r\n\r\n    let row = (\r\n      <div className=\"table\" key={i}>\r\n        {cell}\r\n      </div>\r\n    );\r\n    tableRow.push(row);\r\n  }\r\n  return (\r\n    <>\r\n      {tableRow}\r\n      <div className=\"btnWrap\">\r\n        <Link to=\"/\">WSTECZ</Link>\r\n        <Link onClick={handleStart} to=\"/step\">\r\n          KROK PO KROKU\r\n        </Link>\r\n        <Link onClick={getResolution} to=\"/resolution\">\r\n          ROZWIĄZANIE\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputTable;\r\n","import React from \"react\";\r\nimport \"../CSS/Table.css\";\r\nconst Table = ({\r\n  table,\r\n  title,\r\n  titleStyle = {},\r\n  styles = {},\r\n  cell = { x: null, y: null }\r\n}) => {\r\n  let tabViev = [];\r\n  if (table.length > 0)\r\n    for (let i = 0; i < table.length; i++) {\r\n      let row = [];\r\n      for (let j = 0; j < table[i].length; j++) {\r\n        let styless =\r\n          i === table.length - 1 && j === table[i].length - 1\r\n            ? { fontSize: 0, backgroundColor: \"#35ADC0\" }\r\n            : i === table.length - 1 || j === table[i].length - 1\r\n            ? { backgroundColor: \"#35ADC0\" }\r\n            : {};\r\n\r\n        let styleCell = i === cell.y && j === cell.x ? { color: \"red\" } : {};\r\n\r\n        row.push(\r\n          <div\r\n            key={j}\r\n            className=\"tableCell\"\r\n            style={{ ...styless, ...styles, ...styleCell }}\r\n          >\r\n            {table[i][j] != null ? table[i][j] : \" \"}\r\n          </div>\r\n        );\r\n      }\r\n\r\n      tabViev.push(\r\n        <div key={i} className=\"tableRow\">\r\n          {\" \"}\r\n          {row}\r\n        </div>\r\n      );\r\n    }\r\n  return (\r\n    <>\r\n      <h3 className=\"tableTitle\" style={titleStyle}>\r\n        {title}\r\n      </h3>\r\n      <div className=\"tableBorder\">\r\n        {table.length !== undefined ? tabViev : <div></div>}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState } from \"react\";\r\nimport Table from \"./Table\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Steps = ({ zt, start }) => {\r\n  const [steps, setSteps] = useState([\r\n    <Table key={0} table={zt.Tabela} title={\"Tablela kosztów\"}></Table>\r\n  ]);\r\n  const handleAddNext = () => {\r\n    if (!zt.Optymalne) {\r\n      let step = zt.kolejnyKrok();\r\n      if (\r\n        step.caseIndex === 0 ||\r\n        step.caseIndex === 1 ||\r\n        step.caseIndex === 2 ||\r\n        step.caseIndex === 3\r\n      ) {\r\n        let tab = (\r\n          <Table key={steps.length} table={step.data} title={step.desc}></Table>\r\n        );\r\n        setSteps([...steps, tab]);\r\n      } else if (step.caseIndex === 5) {\r\n        let tab = (\r\n          <Table\r\n            cell={step.data}\r\n            key={steps.length}\r\n            table={zt.nieBazyTable}\r\n            title={step.desc}\r\n          ></Table>\r\n        );\r\n        setSteps([...steps, tab]);\r\n      } else if (step.caseIndex === 6) {\r\n        let table = zt.getRozwiazanie().map(e => e.map(ee => ee));\r\n        for (let i = 0; i < step.data.cykl.length; i++) {\r\n          if (table[step.data.cykl[i].x][step.data.cykl[i].y] !== null)\r\n            table[step.data.cykl[i].x][step.data.cykl[i].y] +=\r\n              i % 2 === 0 ? \" +t\" : \" -t\";\r\n          else\r\n            table[step.data.cykl[i].x][step.data.cykl[i].y] =\r\n              i % 2 === 0 ? \" 0 +t\" : \"0 -t\";\r\n        }\r\n\r\n        let tab = (\r\n          <Table\r\n            cell={step.data}\r\n            key={steps.length}\r\n            table={table}\r\n            title={step.desc}\r\n          ></Table>\r\n        );\r\n        setSteps([...steps, tab]);\r\n      }\r\n      if (step.caseIndex === 7) {\r\n        let tab = (\r\n          <Table\r\n            key={steps.length}\r\n            table={step.data}\r\n            title={`Przemieszczam wartość t= ${zt.T.value} po cyklu`}\r\n          ></Table>\r\n        );\r\n        setSteps([...steps, tab]);\r\n      }\r\n      if (step.caseIndex === 0) {\r\n        let tab = <h2 key=\"koszt\">Koszt optymalny to: {zt.kosztOptymalny}</h2>;\r\n        let tab2 = (\r\n          <Table\r\n            key={steps.length}\r\n            table={zt.getRozwiazanie()}\r\n            title={`Rozwiązanie`}\r\n            titleStyle={{ color: \"green\" }}\r\n          ></Table>\r\n        );\r\n        setSteps([...steps, tab2, tab]);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"btnWrap\">\r\n        {!zt.Optymalne ? (\r\n          <button className=\"btnNext\" onClick={handleAddNext}>\r\n            NASTĘPNY\r\n          </button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n      {steps}\r\n\r\n      <Link to=\"/\">POWRÓT</Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Steps;\r\n","export class ZT {\r\n  constructor() {\r\n    this.Tabela = [];\r\n    this.Rozwiazanie = [];\r\n    this.Koszty = [];\r\n    this.Popyt = [];\r\n    this.Podaz = [];\r\n    this.kosztOptymalny = 0;\r\n    this.Optymalne = false;\r\n    this.Cykl = [];\r\n    this.cyklRoz = false;\r\n    this.next = 1;\r\n    this.return = 0;\r\n    this.nieBazy = { X: [], Y: [] };\r\n    this.nieBazyTable = [];\r\n    this.T = 0;\r\n  }\r\n\r\n  setTable = table => {\r\n    this.Tabela = table;\r\n    // Filling Kolumna/Podaż table with last column from this.table table\r\n    // Uzupełnianie Tabeli Podaż ostatnią columną z tabeli wprowadzonej do programu\r\n    for (let i = 0; i < this.Tabela.length - 1; i++) {\r\n      this.Podaz.push(this.Tabela[i][this.Tabela[i].length - 1]);\r\n    }\r\n\r\n    // filling Wiersz/Popyt table with last row from this.table table\r\n    // Uzupełnianie Tabeli Popyt ostatnim wierszem z tabeli wprowadzonej do programu\r\n    for (let i = 0; i < this.Tabela[this.Tabela.length - 1].length - 1; i++) {\r\n      this.Popyt.push(this.Tabela[this.Tabela.length - 1][i]);\r\n    }\r\n\r\n    let sumInRow = 0; // Popyt\r\n    let sumInCol = 0; // Podaż\r\n\r\n    this.Popyt.forEach(e => (sumInRow += e));\r\n    this.Podaz.forEach(e => (sumInCol += e));\r\n\r\n    if (sumInCol !== sumInRow) {\r\n      let diff = Math.abs(sumInCol - sumInRow);\r\n      if (sumInRow < sumInCol) {\r\n        this.Popyt.push(diff);\r\n        this.Tabela.forEach((e, index) => {\r\n          if (index === this.Tabela.length - 1) e.splice(e.length - 1, 0, diff);\r\n          else e.splice(e.length - 1, 0, 0);\r\n        });\r\n      } else if (sumInRow > sumInCol) {\r\n        let temptable = this.Tabela[0].map((e, index) =>\r\n          index === this.Tabela[0].length - 1 ? diff : 0\r\n        );\r\n        this.Tabela.splice(this.Tabela.length - 1, 0, temptable);\r\n        this.Podaz.push(diff);\r\n      }\r\n    }\r\n\r\n    // Uzupełnianie tabeli Kosztów\r\n    this.Koszty = [];\r\n    for (let i = 0; i < this.Tabela.length - 1; i++) {\r\n      let row = [];\r\n      for (let j = 0; j < this.Tabela[i].length - 1; j++)\r\n        row.push(this.Tabela[i][j]);\r\n      this.Koszty.push(row);\r\n    }\r\n  };\r\n\r\n  // 1. Metoda kąta północno-zachodniego\r\n\r\n  katPolnocnoZachodni = () => {\r\n    let wynik = this.Koszty.map(wiersz => wiersz.map(() => null));\r\n    let podaz = this.Podaz.map(elem => elem);\r\n    let popyt = this.Popyt.map(elem => elem);\r\n\r\n    wynik.forEach((linia, x) =>\r\n      linia.forEach((element, y) => {\r\n        if (wynik[x][y] == null)\r\n          if (podaz[x] !== 0 && popyt[y] !== 0) {\r\n            let wartosc = podaz[x] > popyt[y] ? popyt[y] : podaz[x];\r\n            wynik[x][y] = wartosc;\r\n            podaz[x] -= wartosc;\r\n            popyt[y] -= wartosc;\r\n          }\r\n        if (podaz[x] === 0 && popyt[y] === 0) {\r\n          if (x < wynik.length - 1) wynik[x + 1][y] = 0;\r\n          else if (y < wynik[x].length - 1) wynik[x][y + 1] = 0;\r\n        }\r\n      })\r\n    );\r\n    this.Rozwiazanie = wynik;\r\n  };\r\n\r\n  // 2. Metoda Potencjału dla bazowych\r\n\r\n  bazowePotencjaly = () => {\r\n    let Y = this.Podaz.map(() => null);\r\n    let X = this.Popyt.map(() => null);\r\n\r\n    Y[0] = 0;\r\n    let flag = false;\r\n    while (this.hasEmpty(Y) || this.hasEmpty(X)) {\r\n      flag = false;\r\n      for (let y = 0; y <= this.Rozwiazanie.length; y++) {\r\n        for (let x = 0; x <= this.Rozwiazanie[y].length; x++) {\r\n          if (this.Rozwiazanie[y][x] != null) {\r\n            if (X[x] != null ? Y[y] == null : Y[y] != null) {\r\n              if (X[x] == null) X[x] = this.Koszty[y][x] - Y[y];\r\n              else if (Y[y] == null) Y[y] = this.Koszty[y][x] - X[x];\r\n              flag = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        if (flag) break;\r\n      }\r\n    }\r\n    this.nieBazy.Y = Y.map(e => e);\r\n    this.nieBazy.X = X.map(e => e);\r\n    return { Y, X };\r\n  };\r\n\r\n  // 3. Metoda Potencjału dla kratek nie bazowych\r\n  nieBazowePotencjaly = () => {\r\n    const { X, Y } = this.return;\r\n    let potencjaly = this.Koszty.map(elem => elem.map(e => e));\r\n\r\n    this.Rozwiazanie.forEach((wiersz, y) =>\r\n      wiersz.forEach((elem, x) => {\r\n        if (this.Rozwiazanie[y][x] == null) {\r\n          potencjaly[y][x] = X[x] + Y[y];\r\n        }\r\n      })\r\n    );\r\n    return potencjaly;\r\n  };\r\n\r\n  // 3. Sprawdzenie optymalności netodą potencjałów\r\n  czyOptymalne = () => {\r\n    let jestDodatnie = false;\r\n    let potencjaly = this.return;\r\n    potencjaly.forEach((wiersz, y) =>\r\n      wiersz.forEach((elem, x) => {\r\n        potencjaly[y][x] = potencjaly[y][x] - this.Koszty[y][x];\r\n        if (potencjaly[y][x] > 0) jestDodatnie = true;\r\n      })\r\n    );\r\n    if (!jestDodatnie) {\r\n      this.Optymalne = true;\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  najDodatnia = potencjaly => {\r\n    let maxVal = 0;\r\n    let max = [];\r\n    let newMax;\r\n    let start;\r\n    potencjaly.forEach((wiersz, y) => {\r\n      wiersz.forEach((elem, x) => {\r\n        if (elem === maxVal) max.push({ y, x });\r\n        else if (elem > maxVal) {\r\n          max = [];\r\n          maxVal = elem;\r\n          max.push({ y, x });\r\n        }\r\n      });\r\n    });\r\n    if (max.length === 1) {\r\n      start = max[0];\r\n    } else {\r\n      let minKoszt = max[0].koszt;\r\n      newMax = max[0];\r\n      max.forEach(e => {\r\n        if (e.koszt < minKoszt) newMax = e;\r\n      });\r\n      start = newMax;\r\n    }\r\n    return start;\r\n  };\r\n\r\n  cykl = () => {\r\n    let start = this.return;\r\n    this.Rozwiazanie[start.y][start.x] = 0;\r\n    this.Cykl = [];\r\n    this.cyklRoz = false;\r\n    for (let i = 0; i < this.Koszty[start.y].length; i++) {\r\n      if (\r\n        this.Rozwiazanie[start.y][i] != null &&\r\n        i !== start.x &&\r\n        !this.cyklRoz\r\n      )\r\n        this.path(\r\n          start,\r\n          { y: start.y, x: i },\r\n          this.Koszty.length + this.Koszty[start.y].length - 1,\r\n          \"col\",\r\n          start\r\n        );\r\n    }\r\n  };\r\n\r\n  hasInRow = elem => {\r\n    let flag = false;\r\n    for (let x = 0; x < this.Rozwiazanie[elem.y].length; x++) {\r\n      if (this.Rozwiazanie[elem.y][x] != null) {\r\n        flag = true;\r\n      }\r\n    }\r\n    return flag;\r\n  };\r\n\r\n  hasInCol = elem => {\r\n    let flag = false;\r\n    for (let y = 0; y < this.Rozwiazanie.length; y++) {\r\n      if (this.Rozwiazanie[y][elem.x] != null) {\r\n        flag = true;\r\n      }\r\n    }\r\n    return flag;\r\n  };\r\n\r\n  path = (start, actual, depth, dir, prev) => {\r\n    let path = [];\r\n    if (actual.y === start.y && actual.x === start.x) {\r\n      this.Cykl.push({\r\n        y: actual.y,\r\n        x: actual.x,\r\n        value: this.Rozwiazanie[actual.y][actual.x]\r\n      });\r\n      this.cyklRoz = true;\r\n      return [prev];\r\n    }\r\n    if (depth < 0) return null;\r\n    else if (!this.cyklRoz) {\r\n      if (dir === \"col\") {\r\n        if (this.hasInCol(actual)) {\r\n          for (let i = 0; i < this.Rozwiazanie.length; i++) {\r\n            if (this.Rozwiazanie[i][actual.x] != null && i !== actual.y)\r\n              path.push(\r\n                this.path(\r\n                  start,\r\n                  { x: actual.x, y: i },\r\n                  depth - 1,\r\n                  \"row\",\r\n                  actual\r\n                )\r\n              );\r\n          }\r\n        }\r\n      } else if (dir === \"row\") {\r\n        if (this.hasInRow(actual)) {\r\n          for (let i = 0; i < this.Rozwiazanie[actual.y].length; i++) {\r\n            if (this.Rozwiazanie[actual.y][i] != null && i !== actual.x)\r\n              path.push(\r\n                this.path(\r\n                  start,\r\n                  { x: i, y: actual.y },\r\n                  depth - 1,\r\n                  \"col\",\r\n                  actual\r\n                )\r\n              );\r\n          }\r\n        }\r\n      }\r\n      if (this.cyklRoz) {\r\n        this.Cykl.push({\r\n          y: actual.y,\r\n          x: actual.x,\r\n          value: this.Rozwiazanie[actual.y][actual.x]\r\n        });\r\n      }\r\n      return path;\r\n    }\r\n  };\r\n\r\n  elementMinimalnyCyklu = () => {\r\n    let min = { x: undefined, y: undefined, value: Infinity };\r\n    for (let i = 0; i < this.Cykl.length; i++) {\r\n      if (i % 2 === 1) {\r\n        if (\r\n          min.value > this.Cykl[i].value ||\r\n          (min.value === this.Cykl[i].value &&\r\n            this.Koszty[min.y][min.x] <\r\n              this.Koszty[this.Cykl[i].y][this.Cykl[i].x])\r\n        )\r\n          min = {\r\n            x: this.Cykl[i].x,\r\n            y: this.Cykl[i].y,\r\n            value: this.Cykl[i].value\r\n          };\r\n      }\r\n    }\r\n    return min;\r\n  };\r\n\r\n  moveTValue = () => {\r\n    let min = this.elementMinimalnyCyklu();\r\n\r\n    for (let i = 0; i < this.Cykl.length; i++) {\r\n      if (i % 2 === 0)\r\n        this.Rozwiazanie[this.Cykl[i].y][this.Cykl[i].x] += min.value;\r\n      if (i % 2 === 1)\r\n        this.Rozwiazanie[this.Cykl[i].y][this.Cykl[i].x] -= min.value;\r\n    }\r\n    this.Rozwiazanie[min.y][min.x] = null;\r\n  };\r\n\r\n  hasEmpty = table => {\r\n    for (let i = 0; i < table.length; i++) {\r\n      if (table[i] == null) return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  getRozwiazanie = () => {\r\n    let table = this.Tabela.map(row => row.map(e => e));\r\n    for (let i = 0; i < this.Rozwiazanie.length; i++)\r\n      for (let j = 0; j < this.Rozwiazanie[i].length; j++)\r\n        table[i][j] = this.Rozwiazanie[i][j];\r\n\r\n    return table;\r\n  };\r\n\r\n  getNieBazowe = () => {\r\n    let table = this.Tabela.map(row => row.map(e => e));\r\n    for (let i = 0; i < this.return.length; i++)\r\n      for (let j = 0; j < this.return[i].length; j++)\r\n        if (this.Rozwiazanie[i][j] === null)\r\n          table[i][j] = this.return[i][j] - this.Koszty[i][j];\r\n        else table[i][j] = null;\r\n\r\n    for (let i = 0; i < this.nieBazy.Y.length; i++)\r\n      table[i][table[i].length - 1] = this.nieBazy.Y[i];\r\n\r\n    for (let i = 0; i < this.nieBazy.X.length; i++)\r\n      table[table.length - 1][i] = this.nieBazy.X[i];\r\n    this.nieBazyTable = table.map(e => e.map(ee => ee));\r\n    return table;\r\n  };\r\n\r\n  getBazowe = () => {\r\n    let table = this.Tabela.map(row => row.map(e => e));\r\n    for (let i = 0; i < table.length - 1; i++)\r\n      for (let j = 0; j < table[i].length - 1; j++)\r\n        if (this.Rozwiazanie[i][j] !== null) table[i][j] = this.Koszty[i][j];\r\n        else table[i][j] = null;\r\n    for (let i = 0; i < this.return.Y.length; i++)\r\n      table[i][table[i].length - 1] = this.return.Y[i];\r\n\r\n    for (let i = 0; i < this.return.X.length; i++)\r\n      table[table.length - 1][i] = this.return.X[i];\r\n\r\n    return table;\r\n  };\r\n\r\n  kolejnyKrok = () => {\r\n    switch (this.next) {\r\n      case 0:\r\n        for (let i = 0; i < this.Rozwiazanie.length; i++) {\r\n          for (let j = 0; j < this.Rozwiazanie[i].length; j++) {\r\n            this.kosztOptymalny += this.Rozwiazanie[i][j] * this.Koszty[i][j];\r\n          }\r\n        }\r\n        return {\r\n          data: this.getRozwiazanie(),\r\n          caseIndex: 0,\r\n          desc: \"Optymalne\"\r\n        };\r\n      case 1:\r\n        this.katPolnocnoZachodni();\r\n        this.next = 2;\r\n        return {\r\n          data: this.getRozwiazanie(),\r\n          caseIndex: 1,\r\n          desc: \"kąt północno zachodni\"\r\n        };\r\n      case 2:\r\n        this.return = this.bazowePotencjaly();\r\n        this.next = 3;\r\n        return {\r\n          data: this.getBazowe(),\r\n          caseIndex: 2,\r\n          desc: \"obliczam Potencjały dla bazowych\"\r\n        };\r\n\r\n      case 3:\r\n        this.return = this.nieBazowePotencjaly();\r\n        this.next = 4;\r\n        return {\r\n          data: this.getNieBazowe(),\r\n          caseIndex: 3,\r\n          desc: \"obliczam potencjały dla nie bazowych\"\r\n        };\r\n      case 4:\r\n        if (this.czyOptymalne()) {\r\n          this.next = 0;\r\n          return this.kolejnyKrok();\r\n        } else {\r\n          this.next = 5;\r\n          return {\r\n            data: this.kolejnyKrok(),\r\n            caseIndex: 5,\r\n            desc: \"nie optymalne\"\r\n          };\r\n        }\r\n      case 5:\r\n        this.return = this.najDodatnia(this.return);\r\n        this.next = 6;\r\n        return this.return;\r\n\r\n      case 6:\r\n        this.cykl();\r\n        this.next = 7;\r\n        this.T = this.elementMinimalnyCyklu();\r\n        return {\r\n          data: {\r\n            cykl: this.Cykl,\r\n            t: this.T\r\n          },\r\n          caseIndex: 6,\r\n          desc: \"tworzę cykl po kratkach nie bazowych\"\r\n        };\r\n      case 7:\r\n        this.moveTValue();\r\n        this.next = 2;\r\n        return {\r\n          data: this.getRozwiazanie(),\r\n          caseIndex: 7,\r\n          desc: \"Przemieszczam wartość t po cyklu\"\r\n        };\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n}\r\n\r\nexport const zt = new ZT();\r\n","import React, { useState } from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  Link\n} from \"react-router-dom\";\nimport \"./CSS/App.css\";\nimport CreateTable from \"./Pages/CreateTable\";\nimport InputTable from \"./Pages/InputTable\";\nimport Table from \"./Pages/Table\";\nimport Steps from \"./Pages/Steps\";\nimport { ZT } from \"./ZT\";\n\nfunction App() {\n  const zt = new ZT();\n  const [table, setTable] = useState([[]]);\n  const [resolution, setResolution] = useState([[]]);\n  const [cost, setCost] = useState(0);\n  const [tablica, setTablica] = useState([]);\n\n  const handleCreate = size => {\n    let tab = [];\n    for (let i = 0; i < +size.row; i++) {\n      let row = [];\n      for (let j = 0; j < +size.col; j++) {\n        row.push(1);\n      }\n      tab.push(row);\n    }\n    setTable(tab);\n  };\n\n  const handleSendData = tab => {\n    setTable(tab);\n  };\n\n  const getResolution = e => {\n    zt.setTable(table);\n\n    while (!zt.Optymalne) {\n      zt.kolejnyKrok();\n    }\n    setResolution(zt.getRozwiazanie());\n    setCost(zt.kosztOptymalny);\n    setTablica(table);\n  };\n  const handleStart = () => {\n    zt.setTable(table);\n  };\n\n  return (\n    <Router basename=\"/\">\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Zagadnienie Transportowe</h1>\n          <Redirect to=\"/\"></Redirect>\n          <Switch>\n            <Route exact path=\"/\">\n              <CreateTable handleSubmit={handleCreate}></CreateTable>\n            </Route>\n            <Route path=\"/inputTable\">\n              <InputTable\n                table={table}\n                handleSendData={handleSendData}\n                getResolution={getResolution}\n                handleStart={handleStart}\n              ></InputTable>\n            </Route>\n            <Route path=\"/step\">\n              <Steps zt={zt}></Steps>\n            </Route>\n            <Route path=\"/resolution\">\n              <Table table={tablica} title=\"Tablela kosztów\"></Table>\n              <Table table={resolution} title=\"Tabela wyników\"></Table>\n              <h4>Koszt jest równy: {cost}</h4>\n\n              <Link to=\"/\">POWRÓT</Link>\n            </Route>\n          </Switch>\n        </header>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}